// Raw response from my liked songs, Generated by quicktype
// https://app.quicktype.io

export interface TrackLike {
  created_at: Date
  kind: TrackLikeKind
  track: Track
}

export type TrackLikeKind = "like"

export interface Track {
  artwork_url: null | string
  caption: null | string
  commentable: boolean
  comment_count: number | null
  created_at: Date
  description: null | string
  downloadable: boolean
  download_count: number | null
  duration: number
  full_duration: number
  embeddable_by: EmbeddableBy
  genre: null | string
  has_downloads_left: boolean
  id: number
  kind: TrackKind
  label_name: null | string
  last_modified: Date
  license: License
  likes_count: number | null
  permalink: string
  permalink_url: string
  playback_count: number | null
  public: boolean
  publisher_metadata: PublisherMetadata | null
  purchase_title: null | string
  purchase_url: null | string
  release_date: Date | null
  reposts_count: number
  secret_token: null
  sharing: Sharing
  state: State
  streamable: boolean
  tag_list: string
  title: string
  uri: string
  urn: string
  user_id: number
  visuals: Visuals | null
  waveform_url: string
  display_date: Date
  media: Media
  station_urn: string
  station_permalink: string
  track_authorization: string
  monetization_model: MonetizationModel
  policy: Policy
  user: User
}

export type EmbeddableBy = "all" | "me"

export type TrackKind = "track"

export type License = "all-rights-reserved" | "cc-by-nc-sa" | "cc-by" | "cc-by-nc"

export interface Media {
  transcodings: Transcoding[]
}

export interface Transcoding {
  url: string
  preset: Preset
  duration: number // in millis
  snipped: boolean
  format: Format
  quality: Quality
  is_legacy_transcoding: boolean
}

export interface Format {
  protocol: Protocol
  mime_type: MIMEType
}

export type MIMEType =
  | 'audio/mp4; codecs="mp4a.40.2"'
  | "audio/mpegurl"
  | "audio/mpeg"
  | 'audio/ogg; codecs="opus"'

export type Protocol = "hls" | "progressive" | "ctr-encrypted-hls" | "cbc-encrypted-hls" // TODO: 暂时不支持加密流

export const PRESET_ORDER = [
  "aac_256k",
  "aac_160k",
  "abr_sq",
  "mp3_1_0",
  "opus_0_0",
  "mp3_0_1",
  "mp3_standard",
  "mp3_0_0",
]

export type Preset = (typeof PRESET_ORDER)[number]

export type Quality = "sq" | "hq" // sq and hq makes no difference, only affects aac it seems

export type MonetizationModel = "NOT_APPLICABLE" | "AD_SUPPORTED" | "BLACKBOX"

export type Policy = "ALLOW" | "SNIP" | "BLOCK" | "MONETIZE"

export interface PublisherMetadata {
  id: number
  urn: string
  artist?: string
  contains_music?: boolean
  publisher?: string
  isrc?: string
  explicit?: boolean
  writer_composer?: string
  album_title?: string
  p_line?: string
  p_line_for_display?: string
  release_title?: string
  iswc?: string
  upc_or_ean?: string
  c_line?: string
  c_line_for_display?: string
}

export type Sharing = "public"

export type State = "finished"

export interface User {
  avatar_url: string
  first_name: string
  followers_count: number
  full_name: string
  id: number
  kind: UserKind
  last_modified: Date
  last_name: string
  permalink: string
  permalink_url: string
  uri: string
  urn: string
  username: string
  verified: boolean
  city: null | string
  country_code: null | string
  badges: Badges
  station_urn: string
  station_permalink: string
}

export interface Badges {
  pro: boolean
  creator_mid_tier: boolean
  pro_unlimited: boolean
  verified: boolean
}

export type UserKind = "user" | "track"

export interface Visuals {
  urn: string
  enabled: boolean
  visuals: Visual[]
  tracking: null
}

export interface Visual {
  urn: string
  entry_time: number
  visual_url: string
}

interface PlaylistLikeBase {
  created_at: Date
  type: PlaylistLikeType
  user: User
  uuid: string
  caption: null
  playlist?: Playlist
  system_playlist?: SystemPlaylist
}

export type PlaylistLike = PlaylistLikeBase &
  (
    | { playlist: Playlist; system_playlist?: never }
    | { system_playlist: SystemPlaylist; playlist?: never }
  )

export interface Playlist {
  artwork_url: null | string
  created_at: Date
  duration: number
  id: number
  kind: PlaylistKind
  last_modified: Date
  likes_count: number
  managed_by_feeds: boolean
  permalink: string
  permalink_url: string
  public: boolean
  reposts_count: number
  secret_token: null
  sharing: Sharing
  title: string
  track_count: number
  uri: string
  user_id: number
  set_type: string
  is_album: boolean
  published_at: Date | null
  release_date: Date | null
  display_date: Date
  user: User
}

export type PlaylistKind = "playlist"

export interface SystemPlaylist {
  urn: string
  query_urn: null | string
  permalink: string
  permalink_url: string
  title: string
  description: string
  short_title: string
  short_description: null | string
  tracking_feature_name: string
  playlist_type: PlaylistType
  last_updated: Date | null
  artwork_url: string
  calculated_artwork_url: string
  likes_count: number
  seed: Seed | null
  tracks: PartialTrack[]
  is_public: boolean
  made_for: User | null
  user: User
  kind: SystemPlaylistKind
  id: string
}

export type SystemPlaylistKind = "system-playlist"

export type PlaylistType = "PLAYLIST" | "TRACK_STATION"

export interface Seed {
  urn: string
  permalink: string
}

export interface PartialTrack {
  id: number
  kind: TrackKind
  monetization_model: MonetizationModel
  policy: Policy
}

export type PlaylistLikeType = "playlist-like" | "system-playlist-like"
